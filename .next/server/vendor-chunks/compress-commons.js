/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/compress-commons";
exports.ids = ["vendor-chunks/compress-commons"];
exports.modules = {

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/archive-entry.js":
/*!**********************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/archive-entry.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar ArchiveEntry = module.exports = function() {};\n\nArchiveEntry.prototype.getName = function() {};\n\nArchiveEntry.prototype.getSize = function() {};\n\nArchiveEntry.prototype.getLastModifiedDate = function() {};\n\nArchiveEntry.prototype.isDirectory = function() {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvYXJjaGl2ZXJzL2FyY2hpdmUtZW50cnkuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxkIGdva3VsXFxEb3dubG9hZHNcXHFybWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxjb21wcmVzcy1jb21tb25zXFxsaWJcXGFyY2hpdmVyc1xcYXJjaGl2ZS1lbnRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG5vZGUtY29tcHJlc3MtY29tbW9uc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNCBDaHJpcyBUYWxraW5ndG9uLCBjb250cmlidXRvcnMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYXJjaGl2ZXJqcy9ub2RlLWNvbXByZXNzLWNvbW1vbnMvYmxvYi9tYXN0ZXIvTElDRU5TRS1NSVRcbiAqL1xudmFyIEFyY2hpdmVFbnRyeSA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7fTtcblxuQXJjaGl2ZUVudHJ5LnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24oKSB7fTtcblxuQXJjaGl2ZUVudHJ5LnByb3RvdHlwZS5nZXRTaXplID0gZnVuY3Rpb24oKSB7fTtcblxuQXJjaGl2ZUVudHJ5LnByb3RvdHlwZS5nZXRMYXN0TW9kaWZpZWREYXRlID0gZnVuY3Rpb24oKSB7fTtcblxuQXJjaGl2ZUVudHJ5LnByb3RvdHlwZS5pc0RpcmVjdG9yeSA9IGZ1bmN0aW9uKCkge307Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/archive-entry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/archive-output-stream.js":
/*!******************************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/archive-output-stream.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar inherits = (__webpack_require__(/*! util */ \"util\").inherits);\nvar Transform = (__webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\").Transform);\n\nvar ArchiveEntry = __webpack_require__(/*! ./archive-entry */ \"(rsc)/./node_modules/compress-commons/lib/archivers/archive-entry.js\");\nvar util = __webpack_require__(/*! ../util */ \"(rsc)/./node_modules/compress-commons/lib/util/index.js\");\n\nvar ArchiveOutputStream = module.exports = function(options) {\n  if (!(this instanceof ArchiveOutputStream)) {\n    return new ArchiveOutputStream(options);\n  }\n\n  Transform.call(this, options);\n\n  this.offset = 0;\n  this._archive = {\n    finish: false,\n    finished: false,\n    processing: false\n  };\n};\n\ninherits(ArchiveOutputStream, Transform);\n\nArchiveOutputStream.prototype._appendBuffer = function(zae, source, callback) {\n  // scaffold only\n};\n\nArchiveOutputStream.prototype._appendStream = function(zae, source, callback) {\n  // scaffold only\n};\n\nArchiveOutputStream.prototype._emitErrorCallback = function(err) {\n  if (err) {\n    this.emit('error', err);\n  }\n};\n\nArchiveOutputStream.prototype._finish = function(ae) {\n  // scaffold only\n};\n\nArchiveOutputStream.prototype._normalizeEntry = function(ae) {\n  // scaffold only\n};\n\nArchiveOutputStream.prototype._transform = function(chunk, encoding, callback) {\n  callback(null, chunk);\n};\n\nArchiveOutputStream.prototype.entry = function(ae, source, callback) {\n  source = source || null;\n\n  if (typeof callback !== 'function') {\n    callback = this._emitErrorCallback.bind(this);\n  }\n\n  if (!(ae instanceof ArchiveEntry)) {\n    callback(new Error('not a valid instance of ArchiveEntry'));\n    return;\n  }\n\n  if (this._archive.finish || this._archive.finished) {\n    callback(new Error('unacceptable entry after finish'));\n    return;\n  }\n\n  if (this._archive.processing) {\n    callback(new Error('already processing an entry'));\n    return;\n  }\n\n  this._archive.processing = true;\n  this._normalizeEntry(ae);\n  this._entry = ae;\n\n  source = util.normalizeInputSource(source);\n\n  if (Buffer.isBuffer(source)) {\n    this._appendBuffer(ae, source, callback);\n  } else if (util.isStream(source)) {\n    this._appendStream(ae, source, callback);\n  } else {\n    this._archive.processing = false;\n    callback(new Error('input source must be valid Stream or Buffer instance'));\n    return;\n  }\n\n  return this;\n};\n\nArchiveOutputStream.prototype.finish = function() {\n  if (this._archive.processing) {\n    this._archive.finish = true;\n    return;\n  }\n\n  this._finish();\n};\n\nArchiveOutputStream.prototype.getBytesWritten = function() {\n  return this.offset;\n};\n\nArchiveOutputStream.prototype.write = function(chunk, cb) {\n  if (chunk) {\n    this.offset += chunk.length;\n  }\n\n  return Transform.prototype.write.call(this, chunk, cb);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvYXJjaGl2ZXJzL2FyY2hpdmUtb3V0cHV0LXN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQXdCO0FBQ3ZDLGdCQUFnQiwwR0FBb0M7O0FBRXBELG1CQUFtQixtQkFBTyxDQUFDLDZGQUFpQjtBQUM1QyxXQUFXLG1CQUFPLENBQUMsd0VBQVM7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxkIGdva3VsXFxEb3dubG9hZHNcXHFybWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxjb21wcmVzcy1jb21tb25zXFxsaWJcXGFyY2hpdmVyc1xcYXJjaGl2ZS1vdXRwdXQtc3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbm9kZS1jb21wcmVzcy1jb21tb25zXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0IENocmlzIFRhbGtpbmd0b24sIGNvbnRyaWJ1dG9ycy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmNoaXZlcmpzL25vZGUtY29tcHJlc3MtY29tbW9ucy9ibG9iL21hc3Rlci9MSUNFTlNFLU1JVFxuICovXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCd1dGlsJykuaW5oZXJpdHM7XG52YXIgVHJhbnNmb3JtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJykuVHJhbnNmb3JtO1xuXG52YXIgQXJjaGl2ZUVudHJ5ID0gcmVxdWlyZSgnLi9hcmNoaXZlLWVudHJ5Jyk7XG52YXIgdXRpbCA9IHJlcXVpcmUoJy4uL3V0aWwnKTtcblxudmFyIEFyY2hpdmVPdXRwdXRTdHJlYW0gPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEFyY2hpdmVPdXRwdXRTdHJlYW0pKSB7XG4gICAgcmV0dXJuIG5ldyBBcmNoaXZlT3V0cHV0U3RyZWFtKG9wdGlvbnMpO1xuICB9XG5cbiAgVHJhbnNmb3JtLmNhbGwodGhpcywgb3B0aW9ucyk7XG5cbiAgdGhpcy5vZmZzZXQgPSAwO1xuICB0aGlzLl9hcmNoaXZlID0ge1xuICAgIGZpbmlzaDogZmFsc2UsXG4gICAgZmluaXNoZWQ6IGZhbHNlLFxuICAgIHByb2Nlc3Npbmc6IGZhbHNlXG4gIH07XG59O1xuXG5pbmhlcml0cyhBcmNoaXZlT3V0cHV0U3RyZWFtLCBUcmFuc2Zvcm0pO1xuXG5BcmNoaXZlT3V0cHV0U3RyZWFtLnByb3RvdHlwZS5fYXBwZW5kQnVmZmVyID0gZnVuY3Rpb24oemFlLCBzb3VyY2UsIGNhbGxiYWNrKSB7XG4gIC8vIHNjYWZmb2xkIG9ubHlcbn07XG5cbkFyY2hpdmVPdXRwdXRTdHJlYW0ucHJvdG90eXBlLl9hcHBlbmRTdHJlYW0gPSBmdW5jdGlvbih6YWUsIHNvdXJjZSwgY2FsbGJhY2spIHtcbiAgLy8gc2NhZmZvbGQgb25seVxufTtcblxuQXJjaGl2ZU91dHB1dFN0cmVhbS5wcm90b3R5cGUuX2VtaXRFcnJvckNhbGxiYWNrID0gZnVuY3Rpb24oZXJyKSB7XG4gIGlmIChlcnIpIHtcbiAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgfVxufTtcblxuQXJjaGl2ZU91dHB1dFN0cmVhbS5wcm90b3R5cGUuX2ZpbmlzaCA9IGZ1bmN0aW9uKGFlKSB7XG4gIC8vIHNjYWZmb2xkIG9ubHlcbn07XG5cbkFyY2hpdmVPdXRwdXRTdHJlYW0ucHJvdG90eXBlLl9ub3JtYWxpemVFbnRyeSA9IGZ1bmN0aW9uKGFlKSB7XG4gIC8vIHNjYWZmb2xkIG9ubHlcbn07XG5cbkFyY2hpdmVPdXRwdXRTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKG51bGwsIGNodW5rKTtcbn07XG5cbkFyY2hpdmVPdXRwdXRTdHJlYW0ucHJvdG90eXBlLmVudHJ5ID0gZnVuY3Rpb24oYWUsIHNvdXJjZSwgY2FsbGJhY2spIHtcbiAgc291cmNlID0gc291cmNlIHx8IG51bGw7XG5cbiAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gdGhpcy5fZW1pdEVycm9yQ2FsbGJhY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIGlmICghKGFlIGluc3RhbmNlb2YgQXJjaGl2ZUVudHJ5KSkge1xuICAgIGNhbGxiYWNrKG5ldyBFcnJvcignbm90IGEgdmFsaWQgaW5zdGFuY2Ugb2YgQXJjaGl2ZUVudHJ5JykpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh0aGlzLl9hcmNoaXZlLmZpbmlzaCB8fCB0aGlzLl9hcmNoaXZlLmZpbmlzaGVkKSB7XG4gICAgY2FsbGJhY2sobmV3IEVycm9yKCd1bmFjY2VwdGFibGUgZW50cnkgYWZ0ZXIgZmluaXNoJykpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh0aGlzLl9hcmNoaXZlLnByb2Nlc3NpbmcpIHtcbiAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ2FscmVhZHkgcHJvY2Vzc2luZyBhbiBlbnRyeScpKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLl9hcmNoaXZlLnByb2Nlc3NpbmcgPSB0cnVlO1xuICB0aGlzLl9ub3JtYWxpemVFbnRyeShhZSk7XG4gIHRoaXMuX2VudHJ5ID0gYWU7XG5cbiAgc291cmNlID0gdXRpbC5ub3JtYWxpemVJbnB1dFNvdXJjZShzb3VyY2UpO1xuXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoc291cmNlKSkge1xuICAgIHRoaXMuX2FwcGVuZEJ1ZmZlcihhZSwgc291cmNlLCBjYWxsYmFjayk7XG4gIH0gZWxzZSBpZiAodXRpbC5pc1N0cmVhbShzb3VyY2UpKSB7XG4gICAgdGhpcy5fYXBwZW5kU3RyZWFtKGFlLCBzb3VyY2UsIGNhbGxiYWNrKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9hcmNoaXZlLnByb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ2lucHV0IHNvdXJjZSBtdXN0IGJlIHZhbGlkIFN0cmVhbSBvciBCdWZmZXIgaW5zdGFuY2UnKSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5BcmNoaXZlT3V0cHV0U3RyZWFtLnByb3RvdHlwZS5maW5pc2ggPSBmdW5jdGlvbigpIHtcbiAgaWYgKHRoaXMuX2FyY2hpdmUucHJvY2Vzc2luZykge1xuICAgIHRoaXMuX2FyY2hpdmUuZmluaXNoID0gdHJ1ZTtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLl9maW5pc2goKTtcbn07XG5cbkFyY2hpdmVPdXRwdXRTdHJlYW0ucHJvdG90eXBlLmdldEJ5dGVzV3JpdHRlbiA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vZmZzZXQ7XG59O1xuXG5BcmNoaXZlT3V0cHV0U3RyZWFtLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKGNodW5rLCBjYikge1xuICBpZiAoY2h1bmspIHtcbiAgICB0aGlzLm9mZnNldCArPSBjaHVuay5sZW5ndGg7XG4gIH1cblxuICByZXR1cm4gVHJhbnNmb3JtLnByb3RvdHlwZS53cml0ZS5jYWxsKHRoaXMsIGNodW5rLCBjYik7XG59OyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/archive-output-stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/zip/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/zip/constants.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nmodule.exports = {\n  WORD: 4,\n  DWORD: 8,\n  EMPTY: Buffer.alloc(0),\n\n  SHORT: 2,\n  SHORT_MASK: 0xffff,\n  SHORT_SHIFT: 16,\n  SHORT_ZERO: Buffer.from(Array(2)),\n  LONG: 4,\n  LONG_ZERO: Buffer.from(Array(4)),\n\n  MIN_VERSION_INITIAL: 10,\n  MIN_VERSION_DATA_DESCRIPTOR: 20,\n  MIN_VERSION_ZIP64: 45,\n  VERSION_MADEBY: 45,\n\n  METHOD_STORED: 0,\n  METHOD_DEFLATED: 8,\n\n  PLATFORM_UNIX: 3,\n  PLATFORM_FAT: 0,\n\n  SIG_LFH: 0x04034b50,\n  SIG_DD: 0x08074b50,\n  SIG_CFH: 0x02014b50,\n  SIG_EOCD: 0x06054b50,\n  SIG_ZIP64_EOCD: 0x06064B50,\n  SIG_ZIP64_EOCD_LOC: 0x07064B50,\n\n  ZIP64_MAGIC_SHORT: 0xffff,\n  ZIP64_MAGIC: 0xffffffff,\n  ZIP64_EXTRA_ID: 0x0001,\n\n  ZLIB_NO_COMPRESSION: 0,\n  ZLIB_BEST_SPEED: 1,\n  ZLIB_BEST_COMPRESSION: 9,\n  ZLIB_DEFAULT_COMPRESSION: -1,\n\n  MODE_MASK: 0xFFF,\n  DEFAULT_FILE_MODE: 33188, // 010644 = -rw-r--r-- = S_IFREG | S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH\n  DEFAULT_DIR_MODE: 16877,  // 040755 = drwxr-xr-x = S_IFDIR | S_IRWXU | S_IRGRP | S_IXGRP | S_IROTH | S_IXOTH\n\n  EXT_FILE_ATTR_DIR: 1106051088,  // 010173200020 = drwxr-xr-x = (((S_IFDIR | 0755) << 16) | S_DOS_D)\n  EXT_FILE_ATTR_FILE: 2175008800, // 020151000040 = -rw-r--r-- = (((S_IFREG | 0644) << 16) | S_DOS_A) >>> 0\n\n  // Unix file types\n  S_IFMT: 61440,   // 0170000 type of file mask\n  S_IFIFO: 4096,   // 010000 named pipe (fifo)\n  S_IFCHR: 8192,   // 020000 character special\n  S_IFDIR: 16384,  // 040000 directory\n  S_IFBLK: 24576,  // 060000 block special\n  S_IFREG: 32768,  // 0100000 regular\n  S_IFLNK: 40960,  // 0120000 symbolic link\n  S_IFSOCK: 49152, // 0140000 socket\n\n  // DOS file type flags\n  S_DOS_A: 32, // 040 Archive\n  S_DOS_D: 16, // 020 Directory\n  S_DOS_V: 8,  // 010 Volume\n  S_DOS_S: 4,  // 04 System\n  S_DOS_H: 2,  // 02 Hidden\n  S_DOS_R: 1   // 01 Read Only\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvYXJjaGl2ZXJzL3ppcC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZCBnb2t1bFxcRG93bmxvYWRzXFxxcm1hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcY29tcHJlc3MtY29tbW9uc1xcbGliXFxhcmNoaXZlcnNcXHppcFxcY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbm9kZS1jb21wcmVzcy1jb21tb25zXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0IENocmlzIFRhbGtpbmd0b24sIGNvbnRyaWJ1dG9ycy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmNoaXZlcmpzL25vZGUtY29tcHJlc3MtY29tbW9ucy9ibG9iL21hc3Rlci9MSUNFTlNFLU1JVFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgV09SRDogNCxcbiAgRFdPUkQ6IDgsXG4gIEVNUFRZOiBCdWZmZXIuYWxsb2MoMCksXG5cbiAgU0hPUlQ6IDIsXG4gIFNIT1JUX01BU0s6IDB4ZmZmZixcbiAgU0hPUlRfU0hJRlQ6IDE2LFxuICBTSE9SVF9aRVJPOiBCdWZmZXIuZnJvbShBcnJheSgyKSksXG4gIExPTkc6IDQsXG4gIExPTkdfWkVSTzogQnVmZmVyLmZyb20oQXJyYXkoNCkpLFxuXG4gIE1JTl9WRVJTSU9OX0lOSVRJQUw6IDEwLFxuICBNSU5fVkVSU0lPTl9EQVRBX0RFU0NSSVBUT1I6IDIwLFxuICBNSU5fVkVSU0lPTl9aSVA2NDogNDUsXG4gIFZFUlNJT05fTUFERUJZOiA0NSxcblxuICBNRVRIT0RfU1RPUkVEOiAwLFxuICBNRVRIT0RfREVGTEFURUQ6IDgsXG5cbiAgUExBVEZPUk1fVU5JWDogMyxcbiAgUExBVEZPUk1fRkFUOiAwLFxuXG4gIFNJR19MRkg6IDB4MDQwMzRiNTAsXG4gIFNJR19ERDogMHgwODA3NGI1MCxcbiAgU0lHX0NGSDogMHgwMjAxNGI1MCxcbiAgU0lHX0VPQ0Q6IDB4MDYwNTRiNTAsXG4gIFNJR19aSVA2NF9FT0NEOiAweDA2MDY0QjUwLFxuICBTSUdfWklQNjRfRU9DRF9MT0M6IDB4MDcwNjRCNTAsXG5cbiAgWklQNjRfTUFHSUNfU0hPUlQ6IDB4ZmZmZixcbiAgWklQNjRfTUFHSUM6IDB4ZmZmZmZmZmYsXG4gIFpJUDY0X0VYVFJBX0lEOiAweDAwMDEsXG5cbiAgWkxJQl9OT19DT01QUkVTU0lPTjogMCxcbiAgWkxJQl9CRVNUX1NQRUVEOiAxLFxuICBaTElCX0JFU1RfQ09NUFJFU1NJT046IDksXG4gIFpMSUJfREVGQVVMVF9DT01QUkVTU0lPTjogLTEsXG5cbiAgTU9ERV9NQVNLOiAweEZGRixcbiAgREVGQVVMVF9GSUxFX01PREU6IDMzMTg4LCAvLyAwMTA2NDQgPSAtcnctci0tci0tID0gU19JRlJFRyB8IFNfSVJVU1IgfCBTX0lXVVNSIHwgU19JUkdSUCB8IFNfSVJPVEhcbiAgREVGQVVMVF9ESVJfTU9ERTogMTY4NzcsICAvLyAwNDA3NTUgPSBkcnd4ci14ci14ID0gU19JRkRJUiB8IFNfSVJXWFUgfCBTX0lSR1JQIHwgU19JWEdSUCB8IFNfSVJPVEggfCBTX0lYT1RIXG5cbiAgRVhUX0ZJTEVfQVRUUl9ESVI6IDExMDYwNTEwODgsICAvLyAwMTAxNzMyMDAwMjAgPSBkcnd4ci14ci14ID0gKCgoU19JRkRJUiB8IDA3NTUpIDw8IDE2KSB8IFNfRE9TX0QpXG4gIEVYVF9GSUxFX0FUVFJfRklMRTogMjE3NTAwODgwMCwgLy8gMDIwMTUxMDAwMDQwID0gLXJ3LXItLXItLSA9ICgoKFNfSUZSRUcgfCAwNjQ0KSA8PCAxNikgfCBTX0RPU19BKSA+Pj4gMFxuXG4gIC8vIFVuaXggZmlsZSB0eXBlc1xuICBTX0lGTVQ6IDYxNDQwLCAgIC8vIDAxNzAwMDAgdHlwZSBvZiBmaWxlIG1hc2tcbiAgU19JRklGTzogNDA5NiwgICAvLyAwMTAwMDAgbmFtZWQgcGlwZSAoZmlmbylcbiAgU19JRkNIUjogODE5MiwgICAvLyAwMjAwMDAgY2hhcmFjdGVyIHNwZWNpYWxcbiAgU19JRkRJUjogMTYzODQsICAvLyAwNDAwMDAgZGlyZWN0b3J5XG4gIFNfSUZCTEs6IDI0NTc2LCAgLy8gMDYwMDAwIGJsb2NrIHNwZWNpYWxcbiAgU19JRlJFRzogMzI3NjgsICAvLyAwMTAwMDAwIHJlZ3VsYXJcbiAgU19JRkxOSzogNDA5NjAsICAvLyAwMTIwMDAwIHN5bWJvbGljIGxpbmtcbiAgU19JRlNPQ0s6IDQ5MTUyLCAvLyAwMTQwMDAwIHNvY2tldFxuXG4gIC8vIERPUyBmaWxlIHR5cGUgZmxhZ3NcbiAgU19ET1NfQTogMzIsIC8vIDA0MCBBcmNoaXZlXG4gIFNfRE9TX0Q6IDE2LCAvLyAwMjAgRGlyZWN0b3J5XG4gIFNfRE9TX1Y6IDgsICAvLyAwMTAgVm9sdW1lXG4gIFNfRE9TX1M6IDQsICAvLyAwNCBTeXN0ZW1cbiAgU19ET1NfSDogMiwgIC8vIDAyIEhpZGRlblxuICBTX0RPU19SOiAxICAgLy8gMDEgUmVhZCBPbmx5XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/zip/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/zip/general-purpose-bit.js":
/*!********************************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/zip/general-purpose-bit.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar zipUtil = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/util.js\");\n\nvar DATA_DESCRIPTOR_FLAG = 1 << 3;\nvar ENCRYPTION_FLAG = 1 << 0;\nvar NUMBER_OF_SHANNON_FANO_TREES_FLAG = 1 << 2;\nvar SLIDING_DICTIONARY_SIZE_FLAG = 1 << 1;\nvar STRONG_ENCRYPTION_FLAG = 1 << 6;\nvar UFT8_NAMES_FLAG = 1 << 11;\n\nvar GeneralPurposeBit = module.exports = function() {\n  if (!(this instanceof GeneralPurposeBit)) {\n    return new GeneralPurposeBit();\n  }\n\n  this.descriptor = false;\n  this.encryption = false;\n  this.utf8 = false;\n  this.numberOfShannonFanoTrees = 0;\n  this.strongEncryption = false;\n  this.slidingDictionarySize = 0;\n\n  return this;\n};\n\nGeneralPurposeBit.prototype.encode = function() {\n  return zipUtil.getShortBytes(\n    (this.descriptor ? DATA_DESCRIPTOR_FLAG : 0) |\n    (this.utf8 ? UFT8_NAMES_FLAG : 0) |\n    (this.encryption ? ENCRYPTION_FLAG : 0) |\n    (this.strongEncryption ? STRONG_ENCRYPTION_FLAG : 0)\n  );\n};\n\nGeneralPurposeBit.prototype.parse = function(buf, offset) {\n  var flag = zipUtil.getShortBytesValue(buf, offset);\n  var gbp = new GeneralPurposeBit();\n\n  gbp.useDataDescriptor((flag & DATA_DESCRIPTOR_FLAG) !== 0);\n  gbp.useUTF8ForNames((flag & UFT8_NAMES_FLAG) !== 0);\n  gbp.useStrongEncryption((flag & STRONG_ENCRYPTION_FLAG) !== 0);\n  gbp.useEncryption((flag & ENCRYPTION_FLAG) !== 0);\n  gbp.setSlidingDictionarySize((flag & SLIDING_DICTIONARY_SIZE_FLAG) !== 0 ? 8192 : 4096);\n  gbp.setNumberOfShannonFanoTrees((flag & NUMBER_OF_SHANNON_FANO_TREES_FLAG) !== 0 ? 3 : 2);\n\n  return gbp;\n};\n\nGeneralPurposeBit.prototype.setNumberOfShannonFanoTrees = function(n) {\n  this.numberOfShannonFanoTrees = n;\n};\n\nGeneralPurposeBit.prototype.getNumberOfShannonFanoTrees = function() {\n  return this.numberOfShannonFanoTrees;\n};\n\nGeneralPurposeBit.prototype.setSlidingDictionarySize = function(n) {\n  this.slidingDictionarySize = n;\n};\n\nGeneralPurposeBit.prototype.getSlidingDictionarySize = function() {\n  return this.slidingDictionarySize;\n};\n\nGeneralPurposeBit.prototype.useDataDescriptor = function(b) {\n  this.descriptor = b;\n};\n\nGeneralPurposeBit.prototype.usesDataDescriptor = function() {\n  return this.descriptor;\n};\n\nGeneralPurposeBit.prototype.useEncryption = function(b) {\n  this.encryption = b;\n};\n\nGeneralPurposeBit.prototype.usesEncryption = function() {\n  return this.encryption;\n};\n\nGeneralPurposeBit.prototype.useStrongEncryption = function(b) {\n  this.strongEncryption = b;\n};\n\nGeneralPurposeBit.prototype.usesStrongEncryption = function() {\n  return this.strongEncryption;\n};\n\nGeneralPurposeBit.prototype.useUTF8ForNames = function(b) {\n  this.utf8 = b;\n};\n\nGeneralPurposeBit.prototype.usesUTF8ForNames = function() {\n  return this.utf8;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvYXJjaGl2ZXJzL3ppcC9nZW5lcmFsLXB1cnBvc2UtYml0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLCtFQUFROztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZCBnb2t1bFxcRG93bmxvYWRzXFxxcm1hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcY29tcHJlc3MtY29tbW9uc1xcbGliXFxhcmNoaXZlcnNcXHppcFxcZ2VuZXJhbC1wdXJwb3NlLWJpdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG5vZGUtY29tcHJlc3MtY29tbW9uc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNCBDaHJpcyBUYWxraW5ndG9uLCBjb250cmlidXRvcnMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYXJjaGl2ZXJqcy9ub2RlLWNvbXByZXNzLWNvbW1vbnMvYmxvYi9tYXN0ZXIvTElDRU5TRS1NSVRcbiAqL1xudmFyIHppcFV0aWwgPSByZXF1aXJlKCcuL3V0aWwnKTtcblxudmFyIERBVEFfREVTQ1JJUFRPUl9GTEFHID0gMSA8PCAzO1xudmFyIEVOQ1JZUFRJT05fRkxBRyA9IDEgPDwgMDtcbnZhciBOVU1CRVJfT0ZfU0hBTk5PTl9GQU5PX1RSRUVTX0ZMQUcgPSAxIDw8IDI7XG52YXIgU0xJRElOR19ESUNUSU9OQVJZX1NJWkVfRkxBRyA9IDEgPDwgMTtcbnZhciBTVFJPTkdfRU5DUllQVElPTl9GTEFHID0gMSA8PCA2O1xudmFyIFVGVDhfTkFNRVNfRkxBRyA9IDEgPDwgMTE7XG5cbnZhciBHZW5lcmFsUHVycG9zZUJpdCA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBHZW5lcmFsUHVycG9zZUJpdCkpIHtcbiAgICByZXR1cm4gbmV3IEdlbmVyYWxQdXJwb3NlQml0KCk7XG4gIH1cblxuICB0aGlzLmRlc2NyaXB0b3IgPSBmYWxzZTtcbiAgdGhpcy5lbmNyeXB0aW9uID0gZmFsc2U7XG4gIHRoaXMudXRmOCA9IGZhbHNlO1xuICB0aGlzLm51bWJlck9mU2hhbm5vbkZhbm9UcmVlcyA9IDA7XG4gIHRoaXMuc3Ryb25nRW5jcnlwdGlvbiA9IGZhbHNlO1xuICB0aGlzLnNsaWRpbmdEaWN0aW9uYXJ5U2l6ZSA9IDA7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB6aXBVdGlsLmdldFNob3J0Qnl0ZXMoXG4gICAgKHRoaXMuZGVzY3JpcHRvciA/IERBVEFfREVTQ1JJUFRPUl9GTEFHIDogMCkgfFxuICAgICh0aGlzLnV0ZjggPyBVRlQ4X05BTUVTX0ZMQUcgOiAwKSB8XG4gICAgKHRoaXMuZW5jcnlwdGlvbiA/IEVOQ1JZUFRJT05fRkxBRyA6IDApIHxcbiAgICAodGhpcy5zdHJvbmdFbmNyeXB0aW9uID8gU1RST05HX0VOQ1JZUFRJT05fRkxBRyA6IDApXG4gICk7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUucGFyc2UgPSBmdW5jdGlvbihidWYsIG9mZnNldCkge1xuICB2YXIgZmxhZyA9IHppcFV0aWwuZ2V0U2hvcnRCeXRlc1ZhbHVlKGJ1Ziwgb2Zmc2V0KTtcbiAgdmFyIGdicCA9IG5ldyBHZW5lcmFsUHVycG9zZUJpdCgpO1xuXG4gIGdicC51c2VEYXRhRGVzY3JpcHRvcigoZmxhZyAmIERBVEFfREVTQ1JJUFRPUl9GTEFHKSAhPT0gMCk7XG4gIGdicC51c2VVVEY4Rm9yTmFtZXMoKGZsYWcgJiBVRlQ4X05BTUVTX0ZMQUcpICE9PSAwKTtcbiAgZ2JwLnVzZVN0cm9uZ0VuY3J5cHRpb24oKGZsYWcgJiBTVFJPTkdfRU5DUllQVElPTl9GTEFHKSAhPT0gMCk7XG4gIGdicC51c2VFbmNyeXB0aW9uKChmbGFnICYgRU5DUllQVElPTl9GTEFHKSAhPT0gMCk7XG4gIGdicC5zZXRTbGlkaW5nRGljdGlvbmFyeVNpemUoKGZsYWcgJiBTTElESU5HX0RJQ1RJT05BUllfU0laRV9GTEFHKSAhPT0gMCA/IDgxOTIgOiA0MDk2KTtcbiAgZ2JwLnNldE51bWJlck9mU2hhbm5vbkZhbm9UcmVlcygoZmxhZyAmIE5VTUJFUl9PRl9TSEFOTk9OX0ZBTk9fVFJFRVNfRkxBRykgIT09IDAgPyAzIDogMik7XG5cbiAgcmV0dXJuIGdicDtcbn07XG5cbkdlbmVyYWxQdXJwb3NlQml0LnByb3RvdHlwZS5zZXROdW1iZXJPZlNoYW5ub25GYW5vVHJlZXMgPSBmdW5jdGlvbihuKSB7XG4gIHRoaXMubnVtYmVyT2ZTaGFubm9uRmFub1RyZWVzID0gbjtcbn07XG5cbkdlbmVyYWxQdXJwb3NlQml0LnByb3RvdHlwZS5nZXROdW1iZXJPZlNoYW5ub25GYW5vVHJlZXMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMubnVtYmVyT2ZTaGFubm9uRmFub1RyZWVzO1xufTtcblxuR2VuZXJhbFB1cnBvc2VCaXQucHJvdG90eXBlLnNldFNsaWRpbmdEaWN0aW9uYXJ5U2l6ZSA9IGZ1bmN0aW9uKG4pIHtcbiAgdGhpcy5zbGlkaW5nRGljdGlvbmFyeVNpemUgPSBuO1xufTtcblxuR2VuZXJhbFB1cnBvc2VCaXQucHJvdG90eXBlLmdldFNsaWRpbmdEaWN0aW9uYXJ5U2l6ZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5zbGlkaW5nRGljdGlvbmFyeVNpemU7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUudXNlRGF0YURlc2NyaXB0b3IgPSBmdW5jdGlvbihiKSB7XG4gIHRoaXMuZGVzY3JpcHRvciA9IGI7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUudXNlc0RhdGFEZXNjcmlwdG9yID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmRlc2NyaXB0b3I7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUudXNlRW5jcnlwdGlvbiA9IGZ1bmN0aW9uKGIpIHtcbiAgdGhpcy5lbmNyeXB0aW9uID0gYjtcbn07XG5cbkdlbmVyYWxQdXJwb3NlQml0LnByb3RvdHlwZS51c2VzRW5jcnlwdGlvbiA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lbmNyeXB0aW9uO1xufTtcblxuR2VuZXJhbFB1cnBvc2VCaXQucHJvdG90eXBlLnVzZVN0cm9uZ0VuY3J5cHRpb24gPSBmdW5jdGlvbihiKSB7XG4gIHRoaXMuc3Ryb25nRW5jcnlwdGlvbiA9IGI7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUudXNlc1N0cm9uZ0VuY3J5cHRpb24gPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuc3Ryb25nRW5jcnlwdGlvbjtcbn07XG5cbkdlbmVyYWxQdXJwb3NlQml0LnByb3RvdHlwZS51c2VVVEY4Rm9yTmFtZXMgPSBmdW5jdGlvbihiKSB7XG4gIHRoaXMudXRmOCA9IGI7XG59O1xuXG5HZW5lcmFsUHVycG9zZUJpdC5wcm90b3R5cGUudXNlc1VURjhGb3JOYW1lcyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy51dGY4O1xufTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/zip/general-purpose-bit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/zip/unix-stat.js":
/*!**********************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/zip/unix-stat.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nmodule.exports = {\n    /**\n     * Bits used for permissions (and sticky bit)\n     */\n    PERM_MASK: 4095, // 07777\n\n    /**\n     * Bits used to indicate the filesystem object type.\n     */\n    FILE_TYPE_FLAG: 61440, // 0170000\n\n    /**\n     * Indicates symbolic links.\n     */\n    LINK_FLAG: 40960, // 0120000\n\n    /**\n     * Indicates plain files.\n     */\n    FILE_FLAG: 32768, // 0100000\n\n    /**\n     * Indicates directories.\n     */\n    DIR_FLAG: 16384, // 040000\n\n    // ----------------------------------------------------------\n    // somewhat arbitrary choices that are quite common for shared\n    // installations\n    // -----------------------------------------------------------\n\n    /**\n     * Default permissions for symbolic links.\n     */\n    DEFAULT_LINK_PERM: 511, // 0777\n\n    /**\n     * Default permissions for directories.\n     */\n    DEFAULT_DIR_PERM: 493, // 0755\n\n    /**\n     * Default permissions for plain files.\n     */\n    DEFAULT_FILE_PERM: 420 // 0644\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvYXJjaGl2ZXJzL3ppcC91bml4LXN0YXQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZCBnb2t1bFxcRG93bmxvYWRzXFxxcm1hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcY29tcHJlc3MtY29tbW9uc1xcbGliXFxhcmNoaXZlcnNcXHppcFxcdW5peC1zdGF0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbm9kZS1jb21wcmVzcy1jb21tb25zXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0IENocmlzIFRhbGtpbmd0b24sIGNvbnRyaWJ1dG9ycy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmNoaXZlcmpzL25vZGUtY29tcHJlc3MtY29tbW9ucy9ibG9iL21hc3Rlci9MSUNFTlNFLU1JVFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAvKipcbiAgICAgKiBCaXRzIHVzZWQgZm9yIHBlcm1pc3Npb25zIChhbmQgc3RpY2t5IGJpdClcbiAgICAgKi9cbiAgICBQRVJNX01BU0s6IDQwOTUsIC8vIDA3Nzc3XG5cbiAgICAvKipcbiAgICAgKiBCaXRzIHVzZWQgdG8gaW5kaWNhdGUgdGhlIGZpbGVzeXN0ZW0gb2JqZWN0IHR5cGUuXG4gICAgICovXG4gICAgRklMRV9UWVBFX0ZMQUc6IDYxNDQwLCAvLyAwMTcwMDAwXG5cbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgc3ltYm9saWMgbGlua3MuXG4gICAgICovXG4gICAgTElOS19GTEFHOiA0MDk2MCwgLy8gMDEyMDAwMFxuXG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHBsYWluIGZpbGVzLlxuICAgICAqL1xuICAgIEZJTEVfRkxBRzogMzI3NjgsIC8vIDAxMDAwMDBcblxuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyBkaXJlY3Rvcmllcy5cbiAgICAgKi9cbiAgICBESVJfRkxBRzogMTYzODQsIC8vIDA0MDAwMFxuXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIHNvbWV3aGF0IGFyYml0cmFyeSBjaG9pY2VzIHRoYXQgYXJlIHF1aXRlIGNvbW1vbiBmb3Igc2hhcmVkXG4gICAgLy8gaW5zdGFsbGF0aW9uc1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IHBlcm1pc3Npb25zIGZvciBzeW1ib2xpYyBsaW5rcy5cbiAgICAgKi9cbiAgICBERUZBVUxUX0xJTktfUEVSTTogNTExLCAvLyAwNzc3XG5cbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IHBlcm1pc3Npb25zIGZvciBkaXJlY3Rvcmllcy5cbiAgICAgKi9cbiAgICBERUZBVUxUX0RJUl9QRVJNOiA0OTMsIC8vIDA3NTVcblxuICAgIC8qKlxuICAgICAqIERlZmF1bHQgcGVybWlzc2lvbnMgZm9yIHBsYWluIGZpbGVzLlxuICAgICAqL1xuICAgIERFRkFVTFRfRklMRV9QRVJNOiA0MjAgLy8gMDY0NFxufTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/zip/unix-stat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/zip/util.js":
/*!*****************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/zip/util.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar util = module.exports = {};\n\nutil.dateToDos = function(d, forceLocalTime) {\n  forceLocalTime = forceLocalTime || false;\n\n  var year = forceLocalTime ? d.getFullYear() : d.getUTCFullYear();\n\n  if (year < 1980) {\n    return 2162688; // 1980-1-1 00:00:00\n  } else if (year >= 2044) {\n    return 2141175677; // 2043-12-31 23:59:58\n  }\n\n  var val = {\n    year: year,\n    month: forceLocalTime ? d.getMonth() : d.getUTCMonth(),\n    date: forceLocalTime ? d.getDate() : d.getUTCDate(),\n    hours: forceLocalTime ? d.getHours() : d.getUTCHours(),\n    minutes: forceLocalTime ? d.getMinutes() : d.getUTCMinutes(),\n    seconds: forceLocalTime ? d.getSeconds() : d.getUTCSeconds()\n  };\n\n  return ((val.year - 1980) << 25) | ((val.month + 1) << 21) | (val.date << 16) |\n    (val.hours << 11) | (val.minutes << 5) | (val.seconds / 2);\n};\n\nutil.dosToDate = function(dos) {\n  return new Date(((dos >> 25) & 0x7f) + 1980, ((dos >> 21) & 0x0f) - 1, (dos >> 16) & 0x1f, (dos >> 11) & 0x1f, (dos >> 5) & 0x3f, (dos & 0x1f) << 1);\n};\n\nutil.fromDosTime = function(buf) {\n  return util.dosToDate(buf.readUInt32LE(0));\n};\n\nutil.getEightBytes = function(v) {\n  var buf = Buffer.alloc(8);\n  buf.writeUInt32LE(v % 0x0100000000, 0);\n  buf.writeUInt32LE((v / 0x0100000000) | 0, 4);\n\n  return buf;\n};\n\nutil.getShortBytes = function(v) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16LE((v & 0xFFFF) >>> 0, 0);\n\n  return buf;\n};\n\nutil.getShortBytesValue = function(buf, offset) {\n  return buf.readUInt16LE(offset);\n};\n\nutil.getLongBytes = function(v) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32LE((v & 0xFFFFFFFF) >>> 0, 0);\n\n  return buf;\n};\n\nutil.getLongBytesValue = function(buf, offset) {\n  return buf.readUInt32LE(offset);\n};\n\nutil.toDosTime = function(d) {\n  return util.getLongBytes(util.dateToDos(d));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvYXJjaGl2ZXJzL3ppcC91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQixJQUFJO0FBQ0osdUJBQXVCO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxkIGdva3VsXFxEb3dubG9hZHNcXHFybWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxjb21wcmVzcy1jb21tb25zXFxsaWJcXGFyY2hpdmVyc1xcemlwXFx1dGlsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbm9kZS1jb21wcmVzcy1jb21tb25zXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0IENocmlzIFRhbGtpbmd0b24sIGNvbnRyaWJ1dG9ycy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmNoaXZlcmpzL25vZGUtY29tcHJlc3MtY29tbW9ucy9ibG9iL21hc3Rlci9MSUNFTlNFLU1JVFxuICovXG52YXIgdXRpbCA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbnV0aWwuZGF0ZVRvRG9zID0gZnVuY3Rpb24oZCwgZm9yY2VMb2NhbFRpbWUpIHtcbiAgZm9yY2VMb2NhbFRpbWUgPSBmb3JjZUxvY2FsVGltZSB8fCBmYWxzZTtcblxuICB2YXIgeWVhciA9IGZvcmNlTG9jYWxUaW1lID8gZC5nZXRGdWxsWWVhcigpIDogZC5nZXRVVENGdWxsWWVhcigpO1xuXG4gIGlmICh5ZWFyIDwgMTk4MCkge1xuICAgIHJldHVybiAyMTYyNjg4OyAvLyAxOTgwLTEtMSAwMDowMDowMFxuICB9IGVsc2UgaWYgKHllYXIgPj0gMjA0NCkge1xuICAgIHJldHVybiAyMTQxMTc1Njc3OyAvLyAyMDQzLTEyLTMxIDIzOjU5OjU4XG4gIH1cblxuICB2YXIgdmFsID0ge1xuICAgIHllYXI6IHllYXIsXG4gICAgbW9udGg6IGZvcmNlTG9jYWxUaW1lID8gZC5nZXRNb250aCgpIDogZC5nZXRVVENNb250aCgpLFxuICAgIGRhdGU6IGZvcmNlTG9jYWxUaW1lID8gZC5nZXREYXRlKCkgOiBkLmdldFVUQ0RhdGUoKSxcbiAgICBob3VyczogZm9yY2VMb2NhbFRpbWUgPyBkLmdldEhvdXJzKCkgOiBkLmdldFVUQ0hvdXJzKCksXG4gICAgbWludXRlczogZm9yY2VMb2NhbFRpbWUgPyBkLmdldE1pbnV0ZXMoKSA6IGQuZ2V0VVRDTWludXRlcygpLFxuICAgIHNlY29uZHM6IGZvcmNlTG9jYWxUaW1lID8gZC5nZXRTZWNvbmRzKCkgOiBkLmdldFVUQ1NlY29uZHMoKVxuICB9O1xuXG4gIHJldHVybiAoKHZhbC55ZWFyIC0gMTk4MCkgPDwgMjUpIHwgKCh2YWwubW9udGggKyAxKSA8PCAyMSkgfCAodmFsLmRhdGUgPDwgMTYpIHxcbiAgICAodmFsLmhvdXJzIDw8IDExKSB8ICh2YWwubWludXRlcyA8PCA1KSB8ICh2YWwuc2Vjb25kcyAvIDIpO1xufTtcblxudXRpbC5kb3NUb0RhdGUgPSBmdW5jdGlvbihkb3MpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKCgoZG9zID4+IDI1KSAmIDB4N2YpICsgMTk4MCwgKChkb3MgPj4gMjEpICYgMHgwZikgLSAxLCAoZG9zID4+IDE2KSAmIDB4MWYsIChkb3MgPj4gMTEpICYgMHgxZiwgKGRvcyA+PiA1KSAmIDB4M2YsIChkb3MgJiAweDFmKSA8PCAxKTtcbn07XG5cbnV0aWwuZnJvbURvc1RpbWUgPSBmdW5jdGlvbihidWYpIHtcbiAgcmV0dXJuIHV0aWwuZG9zVG9EYXRlKGJ1Zi5yZWFkVUludDMyTEUoMCkpO1xufTtcblxudXRpbC5nZXRFaWdodEJ5dGVzID0gZnVuY3Rpb24odikge1xuICB2YXIgYnVmID0gQnVmZmVyLmFsbG9jKDgpO1xuICBidWYud3JpdGVVSW50MzJMRSh2ICUgMHgwMTAwMDAwMDAwLCAwKTtcbiAgYnVmLndyaXRlVUludDMyTEUoKHYgLyAweDAxMDAwMDAwMDApIHwgMCwgNCk7XG5cbiAgcmV0dXJuIGJ1Zjtcbn07XG5cbnV0aWwuZ2V0U2hvcnRCeXRlcyA9IGZ1bmN0aW9uKHYpIHtcbiAgdmFyIGJ1ZiA9IEJ1ZmZlci5hbGxvYygyKTtcbiAgYnVmLndyaXRlVUludDE2TEUoKHYgJiAweEZGRkYpID4+PiAwLCAwKTtcblxuICByZXR1cm4gYnVmO1xufTtcblxudXRpbC5nZXRTaG9ydEJ5dGVzVmFsdWUgPSBmdW5jdGlvbihidWYsIG9mZnNldCkge1xuICByZXR1cm4gYnVmLnJlYWRVSW50MTZMRShvZmZzZXQpO1xufTtcblxudXRpbC5nZXRMb25nQnl0ZXMgPSBmdW5jdGlvbih2KSB7XG4gIHZhciBidWYgPSBCdWZmZXIuYWxsb2MoNCk7XG4gIGJ1Zi53cml0ZVVJbnQzMkxFKCh2ICYgMHhGRkZGRkZGRikgPj4+IDAsIDApO1xuXG4gIHJldHVybiBidWY7XG59O1xuXG51dGlsLmdldExvbmdCeXRlc1ZhbHVlID0gZnVuY3Rpb24oYnVmLCBvZmZzZXQpIHtcbiAgcmV0dXJuIGJ1Zi5yZWFkVUludDMyTEUob2Zmc2V0KTtcbn07XG5cbnV0aWwudG9Eb3NUaW1lID0gZnVuY3Rpb24oZCkge1xuICByZXR1cm4gdXRpbC5nZXRMb25nQnl0ZXModXRpbC5kYXRlVG9Eb3MoZCkpO1xufTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/zip/util.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-entry.js":
/*!******************************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/zip/zip-archive-entry.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar inherits = (__webpack_require__(/*! util */ \"util\").inherits);\nvar normalizePath = __webpack_require__(/*! normalize-path */ \"(rsc)/./node_modules/normalize-path/index.js\");\n\nvar ArchiveEntry = __webpack_require__(/*! ../archive-entry */ \"(rsc)/./node_modules/compress-commons/lib/archivers/archive-entry.js\");\nvar GeneralPurposeBit = __webpack_require__(/*! ./general-purpose-bit */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/general-purpose-bit.js\");\nvar UnixStat = __webpack_require__(/*! ./unix-stat */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/unix-stat.js\");\n\nvar constants = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/constants.js\");\nvar zipUtil = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/util.js\");\n\nvar ZipArchiveEntry = module.exports = function(name) {\n  if (!(this instanceof ZipArchiveEntry)) {\n    return new ZipArchiveEntry(name);\n  }\n\n  ArchiveEntry.call(this);\n\n  this.platform = constants.PLATFORM_FAT;\n  this.method = -1;\n\n  this.name = null;\n  this.size = 0;\n  this.csize = 0;\n  this.gpb = new GeneralPurposeBit();\n  this.crc = 0;\n  this.time = -1;\n\n  this.minver = constants.MIN_VERSION_INITIAL;\n  this.mode = -1;\n  this.extra = null;\n  this.exattr = 0;\n  this.inattr = 0;\n  this.comment = null;\n\n  if (name) {\n    this.setName(name);\n  }\n};\n\ninherits(ZipArchiveEntry, ArchiveEntry);\n\n/**\n * Returns the extra fields related to the entry.\n *\n * @returns {Buffer}\n */\nZipArchiveEntry.prototype.getCentralDirectoryExtra = function() {\n  return this.getExtra();\n};\n\n/**\n * Returns the comment set for the entry.\n *\n * @returns {string}\n */\nZipArchiveEntry.prototype.getComment = function() {\n  return this.comment !== null ? this.comment : '';\n};\n\n/**\n * Returns the compressed size of the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getCompressedSize = function() {\n  return this.csize;\n};\n\n/**\n * Returns the CRC32 digest for the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getCrc = function() {\n  return this.crc;\n};\n\n/**\n * Returns the external file attributes for the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getExternalAttributes = function() {\n  return this.exattr;\n};\n\n/**\n * Returns the extra fields related to the entry.\n *\n * @returns {Buffer}\n */\nZipArchiveEntry.prototype.getExtra = function() {\n  return this.extra !== null ? this.extra : constants.EMPTY;\n};\n\n/**\n * Returns the general purpose bits related to the entry.\n *\n * @returns {GeneralPurposeBit}\n */\nZipArchiveEntry.prototype.getGeneralPurposeBit = function() {\n  return this.gpb;\n};\n\n/**\n * Returns the internal file attributes for the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getInternalAttributes = function() {\n  return this.inattr;\n};\n\n/**\n * Returns the last modified date of the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getLastModifiedDate = function() {\n  return this.getTime();\n};\n\n/**\n * Returns the extra fields related to the entry.\n *\n * @returns {Buffer}\n */\nZipArchiveEntry.prototype.getLocalFileDataExtra = function() {\n  return this.getExtra();\n};\n\n/**\n * Returns the compression method used on the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getMethod = function() {\n  return this.method;\n};\n\n/**\n * Returns the filename of the entry.\n *\n * @returns {string}\n */\nZipArchiveEntry.prototype.getName = function() {\n  return this.name;\n};\n\n/**\n * Returns the platform on which the entry was made.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getPlatform = function() {\n  return this.platform;\n};\n\n/**\n * Returns the size of the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getSize = function() {\n  return this.size;\n};\n\n/**\n * Returns a date object representing the last modified date of the entry.\n *\n * @returns {number|Date}\n */\nZipArchiveEntry.prototype.getTime = function() {\n  return this.time !== -1 ? zipUtil.dosToDate(this.time) : -1;\n};\n\n/**\n * Returns the DOS timestamp for the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getTimeDos = function() {\n  return this.time !== -1 ? this.time : 0;\n};\n\n/**\n * Returns the UNIX file permissions for the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getUnixMode = function() {\n  return this.platform !== constants.PLATFORM_UNIX ? 0 : ((this.getExternalAttributes() >> constants.SHORT_SHIFT) & constants.SHORT_MASK);\n};\n\n/**\n * Returns the version of ZIP needed to extract the entry.\n *\n * @returns {number}\n */\nZipArchiveEntry.prototype.getVersionNeededToExtract = function() {\n  return this.minver;\n};\n\n/**\n * Sets the comment of the entry.\n *\n * @param comment\n */\nZipArchiveEntry.prototype.setComment = function(comment) {\n  if (Buffer.byteLength(comment) !== comment.length) {\n    this.getGeneralPurposeBit().useUTF8ForNames(true);\n  }\n\n  this.comment = comment;\n};\n\n/**\n * Sets the compressed size of the entry.\n *\n * @param size\n */\nZipArchiveEntry.prototype.setCompressedSize = function(size) {\n  if (size < 0) {\n    throw new Error('invalid entry compressed size');\n  }\n\n  this.csize = size;\n};\n\n/**\n * Sets the checksum of the entry.\n *\n * @param crc\n */\nZipArchiveEntry.prototype.setCrc = function(crc) {\n  if (crc < 0) {\n    throw new Error('invalid entry crc32');\n  }\n\n  this.crc = crc;\n};\n\n/**\n * Sets the external file attributes of the entry.\n *\n * @param attr\n */\nZipArchiveEntry.prototype.setExternalAttributes = function(attr) {\n  this.exattr = attr >>> 0;\n};\n\n/**\n * Sets the extra fields related to the entry.\n *\n * @param extra\n */\nZipArchiveEntry.prototype.setExtra = function(extra) {\n  this.extra = extra;\n};\n\n/**\n * Sets the general purpose bits related to the entry.\n *\n * @param gpb\n */\nZipArchiveEntry.prototype.setGeneralPurposeBit = function(gpb) {\n  if (!(gpb instanceof GeneralPurposeBit)) {\n    throw new Error('invalid entry GeneralPurposeBit');\n  }\n\n  this.gpb = gpb;\n};\n\n/**\n * Sets the internal file attributes of the entry.\n *\n * @param attr\n */\nZipArchiveEntry.prototype.setInternalAttributes = function(attr) {\n  this.inattr = attr;\n};\n\n/**\n * Sets the compression method of the entry.\n *\n * @param method\n */\nZipArchiveEntry.prototype.setMethod = function(method) {\n  if (method < 0) {\n    throw new Error('invalid entry compression method');\n  }\n\n  this.method = method;\n};\n\n/**\n * Sets the name of the entry.\n *\n * @param name\n * @param prependSlash\n */\nZipArchiveEntry.prototype.setName = function(name, prependSlash = false) {\n  name = normalizePath(name, false)\n    .replace(/^\\w+:/, '')\n    .replace(/^(\\.\\.\\/|\\/)+/, '');\n\n  if (prependSlash) {\n    name = `/${name}`;\n  }\n\n  if (Buffer.byteLength(name) !== name.length) {\n    this.getGeneralPurposeBit().useUTF8ForNames(true);\n  }\n\n  this.name = name;\n};\n\n/**\n * Sets the platform on which the entry was made.\n *\n * @param platform\n */\nZipArchiveEntry.prototype.setPlatform = function(platform) {\n  this.platform = platform;\n};\n\n/**\n * Sets the size of the entry.\n *\n * @param size\n */\nZipArchiveEntry.prototype.setSize = function(size) {\n  if (size < 0) {\n    throw new Error('invalid entry size');\n  }\n\n  this.size = size;\n};\n\n/**\n * Sets the time of the entry.\n *\n * @param time\n * @param forceLocalTime\n */\nZipArchiveEntry.prototype.setTime = function(time, forceLocalTime) {\n  if (!(time instanceof Date)) {\n    throw new Error('invalid entry time');\n  }\n\n  this.time = zipUtil.dateToDos(time, forceLocalTime);\n};\n\n/**\n * Sets the UNIX file permissions for the entry.\n *\n * @param mode\n */\nZipArchiveEntry.prototype.setUnixMode = function(mode) {\n  mode |= this.isDirectory() ? constants.S_IFDIR : constants.S_IFREG;\n\n  var extattr = 0;\n  extattr |= (mode << constants.SHORT_SHIFT) | (this.isDirectory() ? constants.S_DOS_D : constants.S_DOS_A);\n\n  this.setExternalAttributes(extattr);\n  this.mode = mode & constants.MODE_MASK;\n  this.platform = constants.PLATFORM_UNIX;\n};\n\n/**\n * Sets the version of ZIP needed to extract this entry.\n *\n * @param minver\n */\nZipArchiveEntry.prototype.setVersionNeededToExtract = function(minver) {\n  this.minver = minver;\n};\n\n/**\n * Returns true if this entry represents a directory.\n *\n * @returns {boolean}\n */\nZipArchiveEntry.prototype.isDirectory = function() {\n  return this.getName().slice(-1) === '/';\n};\n\n/**\n * Returns true if this entry represents a unix symlink,\n * in which case the entry's content contains the target path\n * for the symlink.\n *\n * @returns {boolean}\n */\nZipArchiveEntry.prototype.isUnixSymlink = function() {\n  return (this.getUnixMode() & UnixStat.FILE_TYPE_FLAG) === UnixStat.LINK_FLAG;\n};\n\n/**\n * Returns true if this entry is using the ZIP64 extension of ZIP.\n *\n * @returns {boolean}\n */\nZipArchiveEntry.prototype.isZip64 = function() {\n  return this.csize > constants.ZIP64_MAGIC || this.size > constants.ZIP64_MAGIC;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-entry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-output-stream.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/compress-commons/lib/archivers/zip/zip-archive-output-stream.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar inherits = (__webpack_require__(/*! util */ \"util\").inherits);\nvar crc32 = __webpack_require__(/*! buffer-crc32 */ \"(rsc)/./node_modules/buffer-crc32/index.js\");\nvar {CRC32Stream} = __webpack_require__(/*! crc32-stream */ \"(rsc)/./node_modules/crc32-stream/lib/index.js\");\nvar {DeflateCRC32Stream} = __webpack_require__(/*! crc32-stream */ \"(rsc)/./node_modules/crc32-stream/lib/index.js\");\n\nvar ArchiveOutputStream = __webpack_require__(/*! ../archive-output-stream */ \"(rsc)/./node_modules/compress-commons/lib/archivers/archive-output-stream.js\");\nvar ZipArchiveEntry = __webpack_require__(/*! ./zip-archive-entry */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-entry.js\");\nvar GeneralPurposeBit = __webpack_require__(/*! ./general-purpose-bit */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/general-purpose-bit.js\");\n\nvar constants = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/constants.js\");\nvar util = __webpack_require__(/*! ../../util */ \"(rsc)/./node_modules/compress-commons/lib/util/index.js\");\nvar zipUtil = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/util.js\");\n\nvar ZipArchiveOutputStream = module.exports = function(options) {\n  if (!(this instanceof ZipArchiveOutputStream)) {\n    return new ZipArchiveOutputStream(options);\n  }\n\n  options = this.options = this._defaults(options);\n\n  ArchiveOutputStream.call(this, options);\n\n  this._entry = null;\n  this._entries = [];\n  this._archive = {\n    centralLength: 0,\n    centralOffset: 0,\n    comment: '',\n    finish: false,\n    finished: false,\n    processing: false,\n    forceZip64: options.forceZip64,\n    forceLocalTime: options.forceLocalTime\n  };\n};\n\ninherits(ZipArchiveOutputStream, ArchiveOutputStream);\n\nZipArchiveOutputStream.prototype._afterAppend = function(ae) {\n  this._entries.push(ae);\n\n  if (ae.getGeneralPurposeBit().usesDataDescriptor()) {\n    this._writeDataDescriptor(ae);\n  }\n\n  this._archive.processing = false;\n  this._entry = null;\n\n  if (this._archive.finish && !this._archive.finished) {\n    this._finish();\n  }\n};\n\nZipArchiveOutputStream.prototype._appendBuffer = function(ae, source, callback) {\n  if (source.length === 0) {\n    ae.setMethod(constants.METHOD_STORED);\n  }\n\n  var method = ae.getMethod();\n\n  if (method === constants.METHOD_STORED) {\n    ae.setSize(source.length);\n    ae.setCompressedSize(source.length);\n    ae.setCrc(crc32.unsigned(source));\n  }\n\n  this._writeLocalFileHeader(ae);\n\n  if (method === constants.METHOD_STORED) {\n    this.write(source);\n    this._afterAppend(ae);\n    callback(null, ae);\n    return;\n  } else if (method === constants.METHOD_DEFLATED) {\n    this._smartStream(ae, callback).end(source);\n    return;\n  } else {\n    callback(new Error('compression method ' + method + ' not implemented'));\n    return;\n  }\n};\n\nZipArchiveOutputStream.prototype._appendStream = function(ae, source, callback) {\n  ae.getGeneralPurposeBit().useDataDescriptor(true);\n  ae.setVersionNeededToExtract(constants.MIN_VERSION_DATA_DESCRIPTOR);\n\n  this._writeLocalFileHeader(ae);\n\n  var smart = this._smartStream(ae, callback);\n  source.once('error', function(err) {\n    smart.emit('error', err);\n    smart.end();\n  })\n  source.pipe(smart);\n};\n\nZipArchiveOutputStream.prototype._defaults = function(o) {\n  if (typeof o !== 'object') {\n    o = {};\n  }\n\n  if (typeof o.zlib !== 'object') {\n    o.zlib = {};\n  }\n\n  if (typeof o.zlib.level !== 'number') {\n    o.zlib.level = constants.ZLIB_BEST_SPEED;\n  }\n\n  o.forceZip64 = !!o.forceZip64;\n  o.forceLocalTime = !!o.forceLocalTime;\n\n  return o;\n};\n\nZipArchiveOutputStream.prototype._finish = function() {\n  this._archive.centralOffset = this.offset;\n\n  this._entries.forEach(function(ae) {\n    this._writeCentralFileHeader(ae);\n  }.bind(this));\n\n  this._archive.centralLength = this.offset - this._archive.centralOffset;\n\n  if (this.isZip64()) {\n    this._writeCentralDirectoryZip64();\n  }\n\n  this._writeCentralDirectoryEnd();\n\n  this._archive.processing = false;\n  this._archive.finish = true;\n  this._archive.finished = true;\n  this.end();\n};\n\nZipArchiveOutputStream.prototype._normalizeEntry = function(ae) {\n  if (ae.getMethod() === -1) {\n    ae.setMethod(constants.METHOD_DEFLATED);\n  }\n\n  if (ae.getMethod() === constants.METHOD_DEFLATED) {\n    ae.getGeneralPurposeBit().useDataDescriptor(true);\n    ae.setVersionNeededToExtract(constants.MIN_VERSION_DATA_DESCRIPTOR);\n  }\n\n  if (ae.getTime() === -1) {\n    ae.setTime(new Date(), this._archive.forceLocalTime);\n  }\n\n  ae._offsets = {\n    file: 0,\n    data: 0,\n    contents: 0,\n  };\n};\n\nZipArchiveOutputStream.prototype._smartStream = function(ae, callback) {\n  var deflate = ae.getMethod() === constants.METHOD_DEFLATED;\n  var process = deflate ? new DeflateCRC32Stream(this.options.zlib) : new CRC32Stream();\n  var error = null;\n\n  function handleStuff() {\n    var digest = process.digest().readUInt32BE(0);\n    ae.setCrc(digest);\n    ae.setSize(process.size());\n    ae.setCompressedSize(process.size(true));\n    this._afterAppend(ae);\n    callback(error, ae);\n  }\n\n  process.once('end', handleStuff.bind(this));\n  process.once('error', function(err) {\n    error = err;\n  });\n\n  process.pipe(this, { end: false });\n\n  return process;\n};\n\nZipArchiveOutputStream.prototype._writeCentralDirectoryEnd = function() {\n  var records = this._entries.length;\n  var size = this._archive.centralLength;\n  var offset = this._archive.centralOffset;\n\n  if (this.isZip64()) {\n    records = constants.ZIP64_MAGIC_SHORT;\n    size = constants.ZIP64_MAGIC;\n    offset = constants.ZIP64_MAGIC;\n  }\n\n  // signature\n  this.write(zipUtil.getLongBytes(constants.SIG_EOCD));\n\n  // disk numbers\n  this.write(constants.SHORT_ZERO);\n  this.write(constants.SHORT_ZERO);\n\n  // number of entries\n  this.write(zipUtil.getShortBytes(records));\n  this.write(zipUtil.getShortBytes(records));\n\n  // length and location of CD\n  this.write(zipUtil.getLongBytes(size));\n  this.write(zipUtil.getLongBytes(offset));\n\n  // archive comment\n  var comment = this.getComment();\n  var commentLength = Buffer.byteLength(comment);\n  this.write(zipUtil.getShortBytes(commentLength));\n  this.write(comment);\n};\n\nZipArchiveOutputStream.prototype._writeCentralDirectoryZip64 = function() {\n  // signature\n  this.write(zipUtil.getLongBytes(constants.SIG_ZIP64_EOCD));\n\n  // size of the ZIP64 EOCD record\n  this.write(zipUtil.getEightBytes(44));\n\n  // version made by\n  this.write(zipUtil.getShortBytes(constants.MIN_VERSION_ZIP64));\n\n  // version to extract\n  this.write(zipUtil.getShortBytes(constants.MIN_VERSION_ZIP64));\n\n  // disk numbers\n  this.write(constants.LONG_ZERO);\n  this.write(constants.LONG_ZERO);\n\n  // number of entries\n  this.write(zipUtil.getEightBytes(this._entries.length));\n  this.write(zipUtil.getEightBytes(this._entries.length));\n\n  // length and location of CD\n  this.write(zipUtil.getEightBytes(this._archive.centralLength));\n  this.write(zipUtil.getEightBytes(this._archive.centralOffset));\n\n  // extensible data sector\n  // not implemented at this time\n\n  // end of central directory locator\n  this.write(zipUtil.getLongBytes(constants.SIG_ZIP64_EOCD_LOC));\n\n  // disk number holding the ZIP64 EOCD record\n  this.write(constants.LONG_ZERO);\n\n  // relative offset of the ZIP64 EOCD record\n  this.write(zipUtil.getEightBytes(this._archive.centralOffset + this._archive.centralLength));\n\n  // total number of disks\n  this.write(zipUtil.getLongBytes(1));\n};\n\nZipArchiveOutputStream.prototype._writeCentralFileHeader = function(ae) {\n  var gpb = ae.getGeneralPurposeBit();\n  var method = ae.getMethod();\n  var offsets = ae._offsets;\n\n  var size = ae.getSize();\n  var compressedSize = ae.getCompressedSize();\n\n  if (ae.isZip64() || offsets.file > constants.ZIP64_MAGIC) {\n    size = constants.ZIP64_MAGIC;\n    compressedSize = constants.ZIP64_MAGIC;\n\n    ae.setVersionNeededToExtract(constants.MIN_VERSION_ZIP64);\n\n    var extraBuf = Buffer.concat([\n      zipUtil.getShortBytes(constants.ZIP64_EXTRA_ID),\n      zipUtil.getShortBytes(24),\n      zipUtil.getEightBytes(ae.getSize()),\n      zipUtil.getEightBytes(ae.getCompressedSize()),\n      zipUtil.getEightBytes(offsets.file)\n    ], 28);\n\n    ae.setExtra(extraBuf);\n  }\n\n  // signature\n  this.write(zipUtil.getLongBytes(constants.SIG_CFH));\n\n  // version made by\n  this.write(zipUtil.getShortBytes((ae.getPlatform() << 8) | constants.VERSION_MADEBY));\n\n  // version to extract and general bit flag\n  this.write(zipUtil.getShortBytes(ae.getVersionNeededToExtract()));\n  this.write(gpb.encode());\n\n  // compression method\n  this.write(zipUtil.getShortBytes(method));\n\n  // datetime\n  this.write(zipUtil.getLongBytes(ae.getTimeDos()));\n\n  // crc32 checksum\n  this.write(zipUtil.getLongBytes(ae.getCrc()));\n\n  // sizes\n  this.write(zipUtil.getLongBytes(compressedSize));\n  this.write(zipUtil.getLongBytes(size));\n\n  var name = ae.getName();\n  var comment = ae.getComment();\n  var extra = ae.getCentralDirectoryExtra();\n\n  if (gpb.usesUTF8ForNames()) {\n    name = Buffer.from(name);\n    comment = Buffer.from(comment);\n  }\n\n  // name length\n  this.write(zipUtil.getShortBytes(name.length));\n\n  // extra length\n  this.write(zipUtil.getShortBytes(extra.length));\n\n  // comments length\n  this.write(zipUtil.getShortBytes(comment.length));\n\n  // disk number start\n  this.write(constants.SHORT_ZERO);\n\n  // internal attributes\n  this.write(zipUtil.getShortBytes(ae.getInternalAttributes()));\n\n  // external attributes\n  this.write(zipUtil.getLongBytes(ae.getExternalAttributes()));\n\n  // relative offset of LFH\n  if (offsets.file > constants.ZIP64_MAGIC) {\n    this.write(zipUtil.getLongBytes(constants.ZIP64_MAGIC));\n  } else {\n    this.write(zipUtil.getLongBytes(offsets.file));\n  }\n\n  // name\n  this.write(name);\n\n  // extra\n  this.write(extra);\n\n  // comment\n  this.write(comment);\n};\n\nZipArchiveOutputStream.prototype._writeDataDescriptor = function(ae) {\n  // signature\n  this.write(zipUtil.getLongBytes(constants.SIG_DD));\n\n  // crc32 checksum\n  this.write(zipUtil.getLongBytes(ae.getCrc()));\n\n  // sizes\n  if (ae.isZip64()) {\n    this.write(zipUtil.getEightBytes(ae.getCompressedSize()));\n    this.write(zipUtil.getEightBytes(ae.getSize()));\n  } else {\n    this.write(zipUtil.getLongBytes(ae.getCompressedSize()));\n    this.write(zipUtil.getLongBytes(ae.getSize()));\n  }\n};\n\nZipArchiveOutputStream.prototype._writeLocalFileHeader = function(ae) {\n  var gpb = ae.getGeneralPurposeBit();\n  var method = ae.getMethod();\n  var name = ae.getName();\n  var extra = ae.getLocalFileDataExtra();\n\n  if (ae.isZip64()) {\n    gpb.useDataDescriptor(true);\n    ae.setVersionNeededToExtract(constants.MIN_VERSION_ZIP64);\n  }\n\n  if (gpb.usesUTF8ForNames()) {\n    name = Buffer.from(name);\n  }\n\n  ae._offsets.file = this.offset;\n\n  // signature\n  this.write(zipUtil.getLongBytes(constants.SIG_LFH));\n\n  // version to extract and general bit flag\n  this.write(zipUtil.getShortBytes(ae.getVersionNeededToExtract()));\n  this.write(gpb.encode());\n\n  // compression method\n  this.write(zipUtil.getShortBytes(method));\n\n  // datetime\n  this.write(zipUtil.getLongBytes(ae.getTimeDos()));\n\n  ae._offsets.data = this.offset;\n\n  // crc32 checksum and sizes\n  if (gpb.usesDataDescriptor()) {\n    this.write(constants.LONG_ZERO);\n    this.write(constants.LONG_ZERO);\n    this.write(constants.LONG_ZERO);\n  } else {\n    this.write(zipUtil.getLongBytes(ae.getCrc()));\n    this.write(zipUtil.getLongBytes(ae.getCompressedSize()));\n    this.write(zipUtil.getLongBytes(ae.getSize()));\n  }\n\n  // name length\n  this.write(zipUtil.getShortBytes(name.length));\n\n  // extra length\n  this.write(zipUtil.getShortBytes(extra.length));\n\n  // name\n  this.write(name);\n\n  // extra\n  this.write(extra);\n\n  ae._offsets.contents = this.offset;\n};\n\nZipArchiveOutputStream.prototype.getComment = function(comment) {\n  return this._archive.comment !== null ? this._archive.comment : '';\n};\n\nZipArchiveOutputStream.prototype.isZip64 = function() {\n  return this._archive.forceZip64 || this._entries.length > constants.ZIP64_MAGIC_SHORT || this._archive.centralLength > constants.ZIP64_MAGIC || this._archive.centralOffset > constants.ZIP64_MAGIC;\n};\n\nZipArchiveOutputStream.prototype.setComment = function(comment) {\n  this._archive.comment = comment;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-output-stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/compress-commons.js":
/*!***************************************************************!*\
  !*** ./node_modules/compress-commons/lib/compress-commons.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nmodule.exports = {\n  ArchiveEntry: __webpack_require__(/*! ./archivers/archive-entry */ \"(rsc)/./node_modules/compress-commons/lib/archivers/archive-entry.js\"),\n  ZipArchiveEntry: __webpack_require__(/*! ./archivers/zip/zip-archive-entry */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-entry.js\"),\n  ArchiveOutputStream: __webpack_require__(/*! ./archivers/archive-output-stream */ \"(rsc)/./node_modules/compress-commons/lib/archivers/archive-output-stream.js\"),\n  ZipArchiveOutputStream: __webpack_require__(/*! ./archivers/zip/zip-archive-output-stream */ \"(rsc)/./node_modules/compress-commons/lib/archivers/zip/zip-archive-output-stream.js\")\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvY29tcHJlc3MtY29tbW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsdUdBQTJCO0FBQ25ELG1CQUFtQixtQkFBTyxDQUFDLHVIQUFtQztBQUM5RCx1QkFBdUIsbUJBQU8sQ0FBQyx1SEFBbUM7QUFDbEUsMEJBQTBCLG1CQUFPLENBQUMsdUlBQTJDO0FBQzdFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGQgZ29rdWxcXERvd25sb2Fkc1xccXJtYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXGNvbXByZXNzLWNvbW1vbnNcXGxpYlxcY29tcHJlc3MtY29tbW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG5vZGUtY29tcHJlc3MtY29tbW9uc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNCBDaHJpcyBUYWxraW5ndG9uLCBjb250cmlidXRvcnMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYXJjaGl2ZXJqcy9ub2RlLWNvbXByZXNzLWNvbW1vbnMvYmxvYi9tYXN0ZXIvTElDRU5TRS1NSVRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFyY2hpdmVFbnRyeTogcmVxdWlyZSgnLi9hcmNoaXZlcnMvYXJjaGl2ZS1lbnRyeScpLFxuICBaaXBBcmNoaXZlRW50cnk6IHJlcXVpcmUoJy4vYXJjaGl2ZXJzL3ppcC96aXAtYXJjaGl2ZS1lbnRyeScpLFxuICBBcmNoaXZlT3V0cHV0U3RyZWFtOiByZXF1aXJlKCcuL2FyY2hpdmVycy9hcmNoaXZlLW91dHB1dC1zdHJlYW0nKSxcbiAgWmlwQXJjaGl2ZU91dHB1dFN0cmVhbTogcmVxdWlyZSgnLi9hcmNoaXZlcnMvemlwL3ppcC1hcmNoaXZlLW91dHB1dC1zdHJlYW0nKVxufTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/compress-commons.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/compress-commons/lib/util/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/compress-commons/lib/util/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * node-compress-commons\n *\n * Copyright (c) 2014 Chris Talkington, contributors.\n * Licensed under the MIT license.\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\n */\nvar Stream = (__webpack_require__(/*! stream */ \"stream\").Stream);\nvar PassThrough = (__webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\").PassThrough);\n\nvar util = module.exports = {};\n\nutil.isStream = function(source) {\n  return source instanceof Stream;\n};\n\nutil.normalizeInputSource = function(source) {\n  if (source === null) {\n    return Buffer.alloc(0);\n  } else if (typeof source === 'string') {\n    return Buffer.from(source);\n  } else if (util.isStream(source) && !source._readableState) {\n    var normalized = new PassThrough();\n    source.pipe(normalized);\n\n    return normalized;\n  }\n\n  return source;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY29tcHJlc3MtY29tbW9ucy9saWIvdXRpbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0RBQXdCO0FBQ3JDLGtCQUFrQiw0R0FBc0M7O0FBRXhEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZCBnb2t1bFxcRG93bmxvYWRzXFxxcm1hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcY29tcHJlc3MtY29tbW9uc1xcbGliXFx1dGlsXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG5vZGUtY29tcHJlc3MtY29tbW9uc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNCBDaHJpcyBUYWxraW5ndG9uLCBjb250cmlidXRvcnMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYXJjaGl2ZXJqcy9ub2RlLWNvbXByZXNzLWNvbW1vbnMvYmxvYi9tYXN0ZXIvTElDRU5TRS1NSVRcbiAqL1xudmFyIFN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpLlN0cmVhbTtcbnZhciBQYXNzVGhyb3VnaCA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpLlBhc3NUaHJvdWdoO1xuXG52YXIgdXRpbCA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbnV0aWwuaXNTdHJlYW0gPSBmdW5jdGlvbihzb3VyY2UpIHtcbiAgcmV0dXJuIHNvdXJjZSBpbnN0YW5jZW9mIFN0cmVhbTtcbn07XG5cbnV0aWwubm9ybWFsaXplSW5wdXRTb3VyY2UgPSBmdW5jdGlvbihzb3VyY2UpIHtcbiAgaWYgKHNvdXJjZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHNvdXJjZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oc291cmNlKTtcbiAgfSBlbHNlIGlmICh1dGlsLmlzU3RyZWFtKHNvdXJjZSkgJiYgIXNvdXJjZS5fcmVhZGFibGVTdGF0ZSkge1xuICAgIHZhciBub3JtYWxpemVkID0gbmV3IFBhc3NUaHJvdWdoKCk7XG4gICAgc291cmNlLnBpcGUobm9ybWFsaXplZCk7XG5cbiAgICByZXR1cm4gbm9ybWFsaXplZDtcbiAgfVxuXG4gIHJldHVybiBzb3VyY2U7XG59OyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/compress-commons/lib/util/index.js\n");

/***/ })

};
;